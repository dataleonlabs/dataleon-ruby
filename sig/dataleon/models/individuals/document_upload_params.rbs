module Dataleon
  module Models
    module Individuals
      type document_upload_params =
        {
          document_type: Dataleon::Models::Individuals::DocumentUploadParams::document_type,
          file: Dataleon::Internal::file_input,
          url: String
        }
        & Dataleon::Internal::Type::request_parameters

      class DocumentUploadParams < Dataleon::Internal::Type::BaseModel
        extend Dataleon::Internal::Type::RequestParameters::Converter
        include Dataleon::Internal::Type::RequestParameters

        attr_accessor document_type: Dataleon::Models::Individuals::DocumentUploadParams::document_type

        attr_reader file: Dataleon::Internal::file_input?

        def file=: (
          Dataleon::Internal::file_input
        ) -> Dataleon::Internal::file_input

        attr_reader url: String?

        def url=: (String) -> String

        def initialize: (
          document_type: Dataleon::Models::Individuals::DocumentUploadParams::document_type,
          ?file: Dataleon::Internal::file_input,
          ?url: String,
          ?request_options: Dataleon::request_opts
        ) -> void

        def to_hash: -> {
          document_type: Dataleon::Models::Individuals::DocumentUploadParams::document_type,
          file: Dataleon::Internal::file_input,
          url: String,
          request_options: Dataleon::RequestOptions
        }

        type document_type =
          :liasse_fiscale
          | :amortised_loan_schedule
          | :invoice
          | :receipt
          | :company_statuts
          | :registration_company_certificate
          | :kbis
          | :rib
          | :livret_famille
          | :birth_certificate
          | :payslip
          | :social_security_card
          | :vehicle_registration_certificate
          | :carte_grise
          | :criminal_record_extract
          | :proof_of_address
          | :identity_card_front
          | :identity_card_back
          | :driver_license_front
          | :driver_license_back
          | :identity_document
          | :driver_license
          | :passport
          | :tax
          | :certificate_of_incorporation
          | :certificate_of_good_standing
          | :lcb_ft_lab_aml_policies
          | :niu_entreprise
          | :financial_statements
          | :rccm
          | :proof_of_source_funds
          | :organizational_chart
          | :risk_policies

        module DocumentType
          extend Dataleon::Internal::Type::Enum

          LIASSE_FISCALE: :liasse_fiscale
          AMORTISED_LOAN_SCHEDULE: :amortised_loan_schedule
          INVOICE: :invoice
          RECEIPT: :receipt
          COMPANY_STATUTS: :company_statuts
          REGISTRATION_COMPANY_CERTIFICATE: :registration_company_certificate
          KBIS: :kbis
          RIB: :rib
          LIVRET_FAMILLE: :livret_famille
          BIRTH_CERTIFICATE: :birth_certificate
          PAYSLIP: :payslip
          SOCIAL_SECURITY_CARD: :social_security_card
          VEHICLE_REGISTRATION_CERTIFICATE: :vehicle_registration_certificate
          CARTE_GRISE: :carte_grise
          CRIMINAL_RECORD_EXTRACT: :criminal_record_extract
          PROOF_OF_ADDRESS: :proof_of_address
          IDENTITY_CARD_FRONT: :identity_card_front
          IDENTITY_CARD_BACK: :identity_card_back
          DRIVER_LICENSE_FRONT: :driver_license_front
          DRIVER_LICENSE_BACK: :driver_license_back
          IDENTITY_DOCUMENT: :identity_document
          DRIVER_LICENSE: :driver_license
          PASSPORT: :passport
          TAX: :tax
          CERTIFICATE_OF_INCORPORATION: :certificate_of_incorporation
          CERTIFICATE_OF_GOOD_STANDING: :certificate_of_good_standing
          LCB_FT_LAB_AML_POLICIES: :lcb_ft_lab_aml_policies
          NIU_ENTREPRISE: :niu_entreprise
          FINANCIAL_STATEMENTS: :financial_statements
          RCCM: :rccm
          PROOF_OF_SOURCE_FUNDS: :proof_of_source_funds
          ORGANIZATIONAL_CHART: :organizational_chart
          RISK_POLICIES: :risk_policies

          def self?.values: -> ::Array[Dataleon::Models::Individuals::DocumentUploadParams::document_type]
        end
      end
    end
  end
end
